---
export interface Props {
  project: {
    id: number;
    title: string;
    client?: string;
    type?: string;
    description: string;
    technologies: string[];
    status: string;
    year: string;
    impact?: string;
    demo?: string;
    github?: string;
    images?: string[];
    challenges?: string[];
    features?: string[];
    results?: string[];
    timeline?: string;
    role?: string;
  };
}

const { project } = Astro.props;
---

<div class="project-modal fixed inset-0 z-[2000] flex items-center justify-center p-4 opacity-0 invisible transition-all duration-300" data-project-id={project.id}>
  <!-- Backdrop -->
  <div class="absolute inset-0 bg-black/80 backdrop-blur-md"></div>
  
  <!-- Modal Content -->
  <div class="relative w-full max-w-6xl max-h-[90vh] bg-gradient-to-br from-[#2a2a2a] to-[#1a1a1a] rounded-2xl border border-white/10 shadow-2xl overflow-hidden">
    <!-- Close Button -->
    <button class="absolute top-6 right-6 z-10 w-10 h-10 flex items-center justify-center bg-black/50 hover:bg-black/70 rounded-full border border-white/20 transition-all duration-300 group" aria-label="Close modal">
      <svg class="w-5 h-5 text-white group-hover:text-red-400 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Scrollable Content -->
    <div class="overflow-y-auto max-h-[90vh] custom-scrollbar">
      <!-- Hero Section -->
      <div class="relative p-8 pb-6 bg-gradient-to-r from-[#8b5cf6]/20 to-[#7c3aed]/20 border-b border-white/10">
        <div class="flex flex-col lg:flex-row lg:items-start gap-6">
          <div class="flex-1">
            <div class="flex items-center gap-3 mb-4">
              <div class="w-3 h-3 bg-gradient-to-r from-[#8b5cf6] to-[#7c3aed] rounded-full"></div>
              <span class="font-roboto-mono text-sm text-[#8b5cf6]">
                {project.client || project.type || 'Project'}
              </span>
            </div>
            
            <h1 class="font-ibrand text-4xl lg:text-5xl font-bold text-white mb-4 leading-tight">
              {project.title}
            </h1>
            
            <p class="font-roboto-mono text-lg text-gray-300 leading-relaxed mb-6">
              {project.description}
            </p>

            <!-- Key Info Grid -->
            <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
              <div class="bg-black/30 rounded-lg p-4 border border-white/10">
                <p class="font-roboto-mono text-xs text-gray-400 mb-1">Status</p>
                <span class="inline-block px-3 py-1 bg-[#8b5cf6]/20 rounded-full text-sm font-roboto-mono text-[#8b5cf6] border border-[#8b5cf6]/40">
                  {project.status}
                </span>
              </div>
              
              <div class="bg-black/30 rounded-lg p-4 border border-white/10">
                <p class="font-roboto-mono text-xs text-gray-400 mb-1">Year</p>
                <p class="font-roboto-mono text-lg font-bold text-white">{project.year}</p>
              </div>
              
              {project.timeline && (
                <div class="bg-black/30 rounded-lg p-4 border border-white/10">
                  <p class="font-roboto-mono text-xs text-gray-400 mb-1">Timeline</p>
                  <p class="font-roboto-mono text-lg font-bold text-white">{project.timeline}</p>
                </div>
              )}
            </div>
          </div>

          <!-- Image -->
          <div class="lg:w-80 h-48 lg:h-64 bg-gradient-to-br from-[#8b5cf6]/10 to-[#7c3aed]/10 rounded-xl border border-white/10 flex items-center justify-center">
            <div class="text-center">
              <div class="w-16 h-16 bg-[#8b5cf6]/20 rounded-full flex items-center justify-center mx-auto mb-3">
                <svg class="w-8 h-8 text-[#8b5cf6]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
              </div>
              <p class="font-roboto-mono text-sm text-gray-400">Project Preview</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Sections -->
      <div class="p-8 space-y-8">
        <!-- Techs -->
        <div>
          <h3 class="font-roboto-mono text-xl font-bold text-white mb-4 flex items-center gap-3">
            <div class="w-2 h-2 bg-[#8b5cf6] rounded-full"></div>
            Technologies Used
          </h3>
          <div class="flex flex-wrap gap-3">
            {project.technologies.map((tech) => (
              <span class="px-4 py-2 bg-[#404040] hover:bg-[#505050] rounded-lg text-sm font-roboto-mono text-gray-300 border border-white/10 transition-colors duration-200">
                {tech}
              </span>
            ))}
          </div>
        </div>

        <!-- Results -->
        {project.impact && (
          <div>
            <h3 class="font-roboto-mono text-xl font-bold text-white mb-4 flex items-center gap-3">
              <div class="w-2 h-2 bg-[#8b5cf6] rounded-full"></div>
              Impact & Results
            </h3>
            <div class="bg-gradient-to-r from-[#8b5cf6]/10 to-[#7c3aed]/10 rounded-xl p-6 border border-[#8b5cf6]/20">
              <p class="font-roboto-mono text-gray-300 leading-relaxed">{project.impact}</p>
            </div>
          </div>
        )}

        <!-- Features -->
        {project.features && project.features.length > 0 && (
          <div>
            <h3 class="font-roboto-mono text-xl font-bold text-white mb-4 flex items-center gap-3">
              <div class="w-2 h-2 bg-[#8b5cf6] rounded-full"></div>
              Key Features
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {project.features.map((feature) => (
                <div class="flex items-start gap-3 p-4 bg-black/30 rounded-lg border border-white/10">
                  <div class="w-2 h-2 bg-[#8b5cf6] rounded-full mt-2 flex-shrink-0"></div>
                  <p class="font-roboto-mono text-sm text-gray-300">{feature}</p>
                </div>
              ))}
            </div>
          </div>
        )}

        <!-- Challenges -->
        {project.challenges && project.challenges.length > 0 && (
          <div>
            <h3 class="font-roboto-mono text-xl font-bold text-white mb-4 flex items-center gap-3">
              <div class="w-2 h-2 bg-[#f59e0b] rounded-full"></div>
              Challenges & Solutions
            </h3>
            <div class="space-y-4">
              {project.challenges.map((challenge) => (
                <div class="p-4 bg-gradient-to-r from-[#f59e0b]/10 to-[#d97706]/10 rounded-lg border border-[#f59e0b]/20">
                  <p class="font-roboto-mono text-sm text-gray-300">{challenge}</p>
                </div>
              ))}
            </div>
          </div>
        )}

        <!-- Role -->
        {project.role && (
          <div>
            <h3 class="font-roboto-mono text-xl font-bold text-white mb-4 flex items-center gap-3">
              <div class="w-2 h-2 bg-[#10b981] rounded-full"></div>
              My Role
            </h3>
            <div class="p-4 bg-gradient-to-r from-[#10b981]/10 to-[#059669]/10 rounded-lg border border-[#10b981]/20">
              <p class="font-roboto-mono text-gray-300">{project.role}</p>
            </div>
          </div>
        )}

        <!-- Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 pt-4 border-t border-white/10">
          {project.demo && (
            <a 
              href={project.demo.startsWith('http') ? project.demo : `https://${project.demo}`}
              target="_blank" 
              rel="noopener noreferrer"
              class="flex-1 bg-gradient-to-r from-[#8b5cf6] to-[#7c3aed] text-white py-3 px-6 rounded-lg font-roboto-mono font-semibold text-center hover:from-[#7c3aed] hover:to-[#5b21b6] hover:shadow-lg hover:shadow-[#8b5cf6]/30 transition-all duration-300"
            >
              View Live Demo
            </a>
          )}
          
          {project.github && (
            <a 
              href={project.github}
              target="_blank" 
              rel="noopener noreferrer"
              class="flex items-center justify-center gap-2 px-6 py-3 bg-transparent border-2 border-[#8b5cf6] text-[#8b5cf6] rounded-lg font-roboto-mono font-semibold hover:bg-[#8b5cf6] hover:text-white transition-all duration-300"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 .5a11.5 11.5 0 0 0-3.64 22.42c.58.11.8-.25.8-.56 0-.28-.01-1.02-.02-2-3.26.71-3.95-1.57-3.95-1.57-.53-1.35-1.3-1.71-1.3-1.71-1.06-.73.08-.72.08-.72 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.73 1.27 3.4.97.11-.75.41-1.27.74-1.56-2.6-.29-5.34-1.3-5.34-5.77 0-1.27.46-2.31 1.2-3.13-.12-.3-.52-1.5.11-3.12 0 0 .98-.31 3.2 1.2a11.1 11.1 0 0 1 5.82 0c2.22-1.51 3.2-1.2 3.2-1.2.63 1.62.24 2.82.12 3.12.75.82 1.2 1.86 1.2 3.13 0 4.48-2.75 5.48-5.37 5.77.42.36.8 1.06.8 2.14 0 1.54-.01 2.78-.01 3.16 0 .31.21.68.81.56A11.5 11.5 0 0 0 12 .5Z"/>
              </svg>
              View Code
            </a>
          )}
          
          {!project.demo && !project.github && (
            <button class="flex-1 bg-[#404040] text-gray-400 py-3 px-6 rounded-lg font-roboto-mono font-semibold cursor-not-allowed">
              Private Project
            </button>
          )}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: #8b5cf6 transparent;
  }
  
  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: #8b5cf6;
    border-radius: 3px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #7c3aed;
  }

  .project-modal.show {
    opacity: 1;
    visibility: visible;
  }
</style>
