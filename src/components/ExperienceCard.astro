---
export interface Props {
  title: string;
  company: string;
  role: string;
  period: string;
  description: string;
  achievements: Array<{
    label: string;
    percentage: number;
    icon?: string;
  }>;
  technologies: Array<string>;
  buttonText?: string;
}

const { title, company, role, period, description, achievements, technologies, buttonText = "View Details" } = Astro.props;
---

<div class="bg-gradient-to-br from-gray-900/90 to-gray-800/90 border border-[#8b5cf6]/20 rounded-2xl p-6 relative shadow-2xl backdrop-blur-sm text-white hover:border-[#8b5cf6]/40 transition-all duration-300 hover:shadow-[#8b5cf6]/10">
  <!-- Header Badge -->
  <div class="absolute -top-3 left-6 px-4 py-1 bg-gradient-to-r from-[#8b5cf6] to-[#7c3aed] rounded-full">
    <span class="font-roboto-mono text-xs font-semibold text-white">PROFESSIONAL EXPERIENCE</span>
  </div>

  <div class="pt-4">
    <!-- Company & Role -->
    <div class="mb-4">
      <div class="flex items-center justify-between mb-2">
        <h3 class="font-ibrand text-xl font-bold text-white">{company}</h3>
        <span class="px-3 py-1 bg-[#8b5cf6]/20 text-[#8b5cf6] rounded-full text-xs font-roboto-mono font-semibold border border-[#8b5cf6]/40">
          {period}
        </span>
      </div>
      <h4 class="font-roboto-mono text-lg font-semibold text-[#8b5cf6] mb-1">{role}</h4>
      <p class="font-roboto-mono text-sm text-gray-300 leading-relaxed">{description}</p>
    </div>

    <!-- Key Achievements -->
    <div class="mb-6">
      <div class="flex items-center gap-2 mb-4">
        <div class="w-2 h-2 bg-[#8b5cf6] rounded-full"></div>
        <h5 class="font-roboto-mono text-sm font-bold text-white uppercase tracking-wide">Key Impact & Results</h5>
      </div>
      
      <div class="space-y-3">
        {achievements.map((achievement) => (
          <div class="flex items-center gap-4">
            <div class="flex items-center gap-2 min-w-[200px]">
              <span class="font-roboto-mono text-sm font-medium text-gray-200">{achievement.label}</span>
            </div>
            <div class="flex items-center gap-3 flex-1">
              <div class="flex-1 h-2 bg-gray-700 rounded-full overflow-hidden">
                <div 
                  class="h-full rounded-full bg-gradient-to-r from-[#8b5cf6] via-[#7c3aed] to-[#5b21b6] transition-all duration-1000 ease-out relative"
                  style={`width: ${achievement.percentage}%;`}
                >
                  <div class="absolute top-0 right-0 w-1 h-full bg-white/60 rounded-full shadow-lg"></div>
                </div>
              </div>
              <span class="font-roboto-mono text-sm font-bold text-[#8b5cf6] min-w-[45px] text-right">
                {achievement.percentage}%
              </span>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Technologies Used -->
    <div class="mb-6">
      <div class="flex items-center gap-2 mb-3">
        <div class="w-2 h-2 bg-[#7c3aed] rounded-full"></div>
        <h5 class="font-roboto-mono text-sm font-bold text-white uppercase tracking-wide">Tech Stack</h5>
      </div>
      <div class="flex flex-wrap gap-2">
        {technologies.map((tech) => (
          <span class="cursor-pointer px-3 py-1 bg-gray-800/60 border border-[#8b5cf6]/30 text-gray-300 rounded-lg text-xs font-roboto-mono font-medium hover:border-[#8b5cf6]/60 hover:text-[#8b5cf6] transition-all duration-200">
            {tech}
          </span>
        ))}
      </div>
    </div>
    
    <!-- Action Button -->
    {buttonText && (
      <div class="flex justify-center pt-2">
        <button class="cursor-pointer group flex items-center gap-2 px-6 py-3 bg-transparent border-2 border-[#8b5cf6] text-[#8b5cf6] rounded-xl font-roboto-mono text-sm font-semibold hover:bg-[#8b5cf6] hover:text-white hover:shadow-lg hover:shadow-[#8b5cf6]/30 hover:-translate-y-1 transition-all duration-300">
          <span>{buttonText}</span>
          <svg class="w-4 h-4 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
    )}
  </div>
</div>
